crd.final <- plot.data[which(plot.data$Date == max(plot.data$Date) & plot.data$variable == "Available Credit"),"value"]
plot.title <- paste(todays.date," -> ",max.date,":    Chk=",chk.final,"    ","Crd=",crd.final,sep="")
composite.plot <- composite.plot + ggtitle(plot.title)
plot.data <- plot.data.bkp
composite.plot
upcoming.delayable.costs %>% kable() %>% kable_styling()
upcoming.notable.costs %>% kable() %>% kable_styling()
# todo
# pretty up the plots and knitted output
# Make a video of the 90 day window sliding along!!!
# make it SHINY!!!
require(audio)
require(magrittr)
require(audio)
require(tuneR)
require(seewave)
? record
a <- record(16000, 8000, 1)
x <- a$data # get the result
x <- unclass(x)
w2 <- Wave((2^15-1)*x , samp.rate = 8000, bit=16) #make the wave variable
tuneR::play(w2)
n <- length(x)
p <- fft(x)
p <- abs(p)  #take the absolute value, or the magnitude
p <- p / n #scale by the number of points so that
plot(1:length(x),x)
plot(1:length(x),x,type="l")
x2 <- (2^15-1)*x
plot(1:length(x2),x2,type="l")
savewav(w2)
install.packages("kras")
install.packages("keras")
install.packages("glmnet")
install.packages('rtools')
install.packages("R")
installr()
install.packages("installr")
updateR()
requrie(installr)
require(installr)
updateR()
require(parallel)
install.packages("rvest")
require(rvest)
require(dplyr)
require(magrittr)
require(data.table)
require(keras)
install.packages(c("data.table", "dplyr"))
? rvest
main <- html_text("http://www.hplovecraft.com/writings/fiction/")
main <- read_html("http://www.hplovecraft.com/writings/fiction/")
main
? html_nodes
main.dv <- html_nodes(main,"div")
main.dv
main.dv <- xml_nodes(main,"div")
main.dv
main.dv[[2]]
main.dv <- xml_nodes(main,"a")
main.a <- xml_nodes(main,"a")
main.a
? regexec
str(main.a)
main.a %<% unlist()
main.a %>%unlist()
main.a
html_text(main.a)
main.a
summary(main.a)
main.a
main.a[[1]]
main.a[[1]][[1]]
main.a[[1]]
main.a[[1]] %>% as.character()
main.a[[2]] %>% as.character()
main.a[[3]] %>% as.character()
main.a[[4]] %>% as.character()
main.a[[10]] %>% as.character()
main.a[[20]] %>% as.character()
main.a[[15]] %>% as.character()
main.a[[14]] %>% as.character()
main.a[[13]] %>% as.character()
main.a[[9]] %>% as.character()
main.a[[10]] %>% as.character()
main.a[[11]] %>% as.character()
length(main.a)
main.a[[121]]
main.a[[120]]
main.a[[110]]
main.a[[100]]
main.a[[10]]
main.a[[11]]
main.a[[12]]
main[[121]]
main
main.a
length(main.a[[11]] %>% as.character())
length(main.a)
main.a[[121]]
main.a[[119]]
main.a[[117]]
main.a[[100]]
main.a[[100]] %>% as.character)
main.a[[100]] %>% as.character()
main.a[[110]] %>% as.character()
main.a[[120]] %>% as.character()
main.a[[115]] %>% as.character()
main.a[[116]] %>% as.character()
story.links <- main.a[11:115]
story.links
story.links.chr <- story.links %>% as.character()
story.links.chr
link.suffixes <- substring(1,10,story.links.chr)
story.links.chr
link.suffixes <- substring(1,10,story.links.chr %>% unlist())
story.links.chr
? substring
substring(story.links.chr,1,2)
substring(story.links.chr,1,3)
substring(story.links.chr,1,5)
substring(story.links.chr,1,15)
substring(story.links.chr,5,15)
substring(story.links.chr,10,15)
substring(story.links.chr,8,15)
substring(story.links.chr,5,15)
substring(story.links.chr,8,15)
substring(story.links.chr,11,15)
substring(story.links.chr,10,15)
substring(story.links.chr,9,15)
substring(story.links.chr,10,120)
substring(story.links.chr,10,9)
substring(story.links.chr,10,19)
substring(story.links.chr,10,18)
substring(story.links.chr,10,15)
substring(story.links.chr,10,14)
substring(story.links.chr,10,19)
? regexec
regexec(story.links.chr,".aspx")
regexec(".aspx",story.links.chr)
regexec(".aspx",story.links.chr) %>% unlist()
link.end.indicies <- regexec(".aspx",story.links.chr) %>% unlist()
link.suffixes <- substring(1,10,link.end.indicies)
link.suffixes <- substring(1,link.end.indicies,story.links.chr)
link.suffixes
link.suffixes <- substring(1,10,story.links.chr)
link.suffixes
? substring
link.suffixes <- substring(story.links.chr,1,10)
link.suffixes
link.suffixes <- substring(story.links.chr,10,19)
link.suffixes
link.suffixes <- substring(story.links.chr,9,19)
link.suffixelink.suffixess
link.suffixes <- substring(story.links.chr,9,19)
link.suffixes
link.suffixes <- substring(story.links.chr,10,19)
link.suffixes
link.end.indicies
link.suffixes <- substring(story.links.chr,10,link.end.indicies)
link.suffixes
site.url <- "http://www.hplovecraft.com/writings/fiction/"
story.links <- paste(site.url,link.suffixes,"aspx",sep="")
story.links
main.a
story.links
require(parallel)
detectCores()
detectCores(logical=FALSE)
story.links
#require(parallel) :(
require(snow)
install.packages("snow")
install.packages("foreach")
require(foreach)
length(story.links)
require(rvest)
require(dplyr)
require(magrittr)
require(data.table)
require(keras)
#require(parallel) :(
require(snow)
require(foreach)
results <- rep("",length(story.links))
results
story.links
story.links[[1]]
site.url <- "http://www.hplovecraft.com/writings/fiction/"
main <- read_html(site.url)
main.a <- xml_nodes(main,"a")
story.links <- main.a[11:115]
story.links.chr <- story.links %>% as.character()
link.end.indicies <- regexec(".aspx",story.links.chr) %>% unlist()
link.suffixes <- substring(story.links.chr,10,link.end.indicies)
story.links <- paste(site.url,link.suffixes,"aspx",sep="")
results <- rep("",length(story.links))
foreach(i=1:length(story.links)){
results <- rep("",length(story.links))
foreach(i=1:length(story.links)) %dopar% (
results[[i]] <- story.links[[i]]
)
foreach(i=1:length(story.links)) %dopar% (
results[[i]] <- read_html(story.links[[i]])
)
results <- list()
results
results[[1]]
results <- list(rep("",length(story.links)))
results
results <- lapply(rep("",length(story.links)),list)
results
results[[1]]
results[[1]][[1]]
results <- lapply(rep("",length(story.links)),list) %>% unlist()
results
results <- lapply(rep("",length(story.links)),list) %>% unlist(recursive=FALSE)
results
results[[150]]
results[[140]]
length(results)
results[[100]]
foreach(i=1:length(story.links)) %dopar% (
results[[i]] <- read_html(story.links[[i]])
)
system.time({
results <- lapply(rep("",length(story.links)),list) %>% unlist(recursive=FALSE)
foreach(i=1:length(story.links)) %dopar% (
results[[i]] <- read_html(story.links[[i]])
)
})
results
? x,l_nodes
? mxl_nodes
? xml_nodes
? html_nodes
div.nodes <- html_nodes(results[[1]],"div")
div.nodes
? toc
require)tictoc
require(tictoc)
install.packages("tictoc")
require(tictoc)
div.nodes <- html_nodes(results[[1]],"div")
div.nodes
story.links
div.nodes <- html_nodes(results[[10]],"div")
div.nodes
i <- 10
t <- read_html(story.links[[i]])
t
html_nodes(read_html(story.links[[i]]),"div")
html_nodes(read_html(story.links[[i]]),"div")[[1]]
html_nodes(read_html(story.links[[i]]),"div")[[2]]
html_nodes(read_html(story.links[[i]]),"div")[[3]]
story.links
? read_html
story.links[[10]]
s <- read_html(story.links[[10]])
s
s[[2]]
read_html(sotry.links[[1]])
read_html(story.links[[1]])
read_html(story.links[[10]])
```{python iforget}
install.packages(c("gtools", "kableExtra"))
install.packages("RMariaDB")
require(magrittr)
require(RMariaDB)
root.password <- 'badpassword'
storiesDb <- dbConnect(RMariaDB::MariaDB(), user='root', password=root.password, dbname='firstdb', host='localhost')
? dbConnect
require(DBI)
storiesDb <- dbConnect(RMariaDB::MariaDB(), user='root', password=root.password, dbname='firstdb', host='localhost')
dbListTables(storiesDb)
dbDisconnect(storiesDb)
require(magrittr)
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
View(Cameras)
plot(Cameras)
mod<-lm(Cameras$Price ~.,data=Cameras)
summary(Cameras)
str(Cameras)
? lm
mod<-lm(Cameras$Price ~.,data=Cameras)
names9Cameras
names(Cameras)
require(magrittr)
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
mod<-lm(Cameras$Price ~.,data=Cameras)
mod
predictions <- predict(LR,Newcost,internal="prediction")
predictions <- predict(mod,Newcost,internal="prediction")
plot(Cameras)
Newcost<-data.frame(Score=230)
predictions <- predict(mod,Newcost,internal="prediction")
predictions
source('~/Pengte,Sarentuya.R', echo=TRUE)
LR<- lm(y~x)
# Question 1
y<- Cameras$Score
x<- Cameras$Price
LR<- lm(y~x)
#Question 8
Newcost<-data.frame(Score=230)
predict(LR,Newcost,internal="prediction")
Newcost
LR
? predict
predict(LR,Newcost,internal="prediction")
LR
Newcost
predict(LR,Newcost,interval="prediction")
predict(LR,Newcost,internal="prediction")
plot(Cameras)
rm(list=ls())
source('~/Pengte,Sarentuya.R', echo=TRUE)
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
source('~/Pengte,Sarentuya.R', echo=TRUE)
rm(list=ls())
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
# Question 1
y<- Cameras$Score
x<- Cameras$Price
LR<- lm(y~x)
#Question 8
Newcost<-data.frame(Score=230)
predict(LR,Newcost,interval="prediction")
predict(LR,Newcost)
Newcost<-data.frame(Score=230)
predictions <- predict(mod,Newcost,internal="prediction")
require(magrittr)
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
mod<-lm(Cameras$Price ~.,data=Cameras)
Newcost<-data.frame(Score=230)
predictions <- predict(mod,Newcost,internal="prediction")
predictions
predictions <- predict(mod,Newcost,interval="prediction")
predictions
LR<- lm(Score~Price,data=Cameras)
#Question 8
Newcost<-data.frame(Score=230)''
#Question 8
Newcost<-data.frame(Score=230)
predict(LR,Newcost,interval="prediction")
#290.648
mod<-lm(Cameras$Price ~.,data=Cameras)
predict(mod,Newcost,interval="prediction")
rm(list=ls())
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
source('~/Pengte,Sarentuya.R', echo=TRUE)
#290.648
mod<-lm(Cameras$Price ~.,data=Cameras)
predict(mod,Newcost,interval="prediction")
predict(LR,Newcost,interval="prediction")
predictions
require(magrittr)
setwd('C:/Users/HDickie/Documents')
Cameras <- read.csv('Cameras.csv')
names(Cameras) <- c("Price","Score")
mod<-lm(Cameras$Price ~.,data=Cameras)
Newcost<-data.frame(Score=230)
predictions <- predict(mod,Newcost,interval="prediction")
predictions
str(Cameras)
predict(mod,Newcost,interval="prediction")
rm(list=ls())
View(Cameras)
Viw(Cameras)
View(Cameras)
Cameras <- read.csv("~/Cameras.csv")
View(Cameras)
names(Cameras)
names(Cameras) <- c("Price","Score")
mod<-lm(Cameras$Price ~.,data=Cameras)
#Question 8
Newcost<-data.frame(Score=230)
predict(LR,Newcost,interval="prediction")
predict(mod,Newcost,interval="prediction")
#Question 8
Newcost<-data.frame(Score=250)
predict(LR,Newcost,interval="prediction")
predict(mod,Newcost,interval="prediction")
mod
#290.648
mod<-lm(Cameras$Score ~.,data=Cameras)
#Question 8
Newcost<-data.frame(Price=250)
predict(mod,Newcost,interval="prediction")
require(googledrive)
install.packages("googledrive")
require(googledrive)
drive_find()
install.packages("httpuv");require(httpuv)
drive_find()
drive_find("fin")
trigger.files <- drive_get("fin")
trigger.files
trigger.files[[1]]
trigger.files <- drive_download("fin")
trigger.files <- drive_download(drive_get("fin"))
trigger.files <- drive_get("fin")
trigger.files
as_id(drive_get("fin"))
drive_download(as_id(drive_get("fin")))
drive_find()
drive_get("fin")
? drive_find()
drvie_find(type="folder")
drive_find(type="folder")
trigger.files <- drive_find(type="folder",pattern="fin")
trigger.files
drive_get(trigger.files)
require(magrittr)
drive_get(trigger.files %>% as_id())
drive_get(trigger.files %>% as_id())[[1]]
drive_get(trigger.files %>% as_id()) %>% str()
drive_get('~/fin/')
trigger.files <- drive_find(type="folder",pattern="fin")
trigger.files
drive_find()
drive_find()[[1]]
trigger.files
str(trigger.files)
all.files <= drive_find()
all.files <- drive_find()
all.files
all.files[[1]]
str(all.files)
length(all.files)
names(all.files)
all.files[1,1]
all.files[1,2]
drive_ls("fin")
#config.R
project.directory <- "C:/Users/HDickie/Desktop/master-root/"
google.drive.fin.folder.name <- "fin"
local.fin.dr <- paste(project.directory,google.drive.fin.folder.name,sep="")
local.fin.dr
google.drive.fin.folder.name <- "fin/"
local.fin.dr <- paste(project.directory,google.drive.fin.folder.name,sep="")
local.fin.dr
drive_download(trigger.files)
rm(list=ls())
#get-trigger-files-from-google-drive.R
source("config.R")
getwd()
dirname()
dirname(sys.frame(1)$ofile)
dirname(sys.frame(0)$ofile)
sys.frame(0)
sys.frame(1)
sys.frame(0)
str(sys.frame(0))
setwd("C:\Users\HDickie\Desktop\master-root\src")
source("config.R")
require(googledrive)
#get-trigger-files-from-google-drive.R
setwd("C:/Users/HDickie/Desktop/master-root/src")
source("config.R")
trigger.files <- drive_ls(google.drive.fin.folder.name)
setwd(local.fin.dr)
trigger.files
trigger.files@id
trigger.files$id
setwd(local.fin.dr)
drive_download(trigger.files$id)
trigger.files$id %>% as_id()
drive_download(trigger.files$id %>% as_id())
setwd(local.fin.dr)
lapply(as_id(trigger.files$id),drive_download)
trigger.files[1,2]
drive_download(trigger.files[1,2])
trigger.files
drive_download(trigger.files[[1]])
trigger.files[[1]]
trigger.files[1,]
drive_download(trigger.files[1,])
? apply
apply(as_id(trigger.files$id),1,drive_download)
setwd(local.fin.dr)
apply(trigger.files,1,drive_download)
trigger.files
setwd(local.fin.dr)
for (i in 1:nrow(trigger.files)){
drive_download(trigger.files[i,])
}
setwd(local.fin.dr)
for (i in 1:nrow(trigger.files)){
tryCatch({
drive_download(trigger.files[i,])
},error=function(e){
print(e)
})
}
trigger.files[2,]
trigger.files[3,]
trigger.files
trigger.files <- trigger.files[trigger.files$name!="archive",]
trigger.files
